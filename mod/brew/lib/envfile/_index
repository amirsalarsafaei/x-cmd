# shellcheck shell=dash

___x_cmd_brew_envfile(){
    # Notice the homebrew might be installed after this file is loaded
    ___X_CMD_BREW_ENVFILE_DIR="$HOMEBREW_PREFIX/etc/homebrew"
    ___X_CMD_BREW_ENVFILE_FP="$___X_CMD_BREW_ENVFILE_DIR/brew.env"

    local op="$1";  shift
    case "$op" in
        write|clear|read)
            ___x_cmd_brew_envfile_"$op" "$@" ;;
    esac
}

___x_cmd_brew_envfile_write(){
    brew:info "Write to $___X_CMD_BREW_ENVFILE_FP"
    ___x_cmd touch "$___X_CMD_BREW_ENVFILE_FP"
    local data=
    data="$(___x_cmd_brew_envfile_clear_op <"$___X_CMD_BREW_ENVFILE_FP")"
    data="$data
# x-cmd"
    while [ $# -ge 1 ]; do
        data="$data
$1=$2"
        brew:debug "Write $1=$2 to $___X_CMD_BREW_ENVFILE_FP"
        shift 2
    done

    printf "%s\n" "$data" >"$___X_CMD_BREW_ENVFILE_FP"
}

___x_cmd_brew_envfile_read(){
    [ -f "$___X_CMD_BREW_ENVFILE_FP" ] || {
        brew:info "File not found -> $___X_CMD_BREW_ENVFILE_FP"
        return 1
    }

    local data
    data="$(___x_cmd_cmds cat "$___X_CMD_BREW_ENVFILE_FP")"
    [ -n "$data" ] || {
        brew:info "File is empty -> $___X_CMD_BREW_ENVFILE_FP"
        return 0
    }
    brew:info "Read from $___X_CMD_BREW_ENVFILE_FP"
    printf "%s\n" "$data"
}

___x_cmd_brew_envfile_clear(){
    [ -f "$___X_CMD_BREW_ENVFILE_FP" ] || return 0
    local data=
    data="$(___x_cmd_brew_envfile_clear_op <"$___X_CMD_BREW_ENVFILE_FP")" || return 0
    printf "%s\n" "$data" >"$___X_CMD_BREW_ENVFILE_FP"
}

___x_cmd_brew_envfile_clear_op(){
    command awk '
BEGIN{
    ret = 1
}
$0 ~ "^#[ ]x-cmd"{
    ret = 0
    exit(0)
}
{
    print
}
END{
    exit( ret )
}
'
}
