# shellcheck shell=dash disable=SC2034

___x_cmd log init theme

xrc htag/latest
xrc term

xrc:mod:lib     theme       \
    envinit ls util comp/_index control style/_index envy feature/_index

___x_cmd_theme_main(){
    local X_help_cmd=;  X_help_cmd='x help -m theme' help:arg:parse
    local op="$1"
    case "$op" in
        --app)
                        xrc:mod:lib theme app/_index
                        ___x_cmd_theme_control_app "$@"             ;;
        ls|current|update|\
        feature|envy|reload)
                        shift; ___x_cmd_theme_"$op" "$@"            ;;

        use|unuse|\
        try|untry|\
        font)
                        shift; "___x_cmd_theme_control_$op" "$@"    ;;
        --co|,)         shift; X_CO_MSHOT_CMD="x theme" ___x_cmd co --mshot "$@" ;;
        -h|--help)      ___x_cmd help -m  theme                     ;;
        *)
                        if [ -t 1 ] && ___x_cmd_is_interactive; then
                            xrc:mod:lib theme app/nv
                            ___x_cmd_theme_nv
                        else
                            ___x_cmd help -m theme >&2
                            return 64
                        fi
                        ;;
        esac
}

___x_cmd_theme_current_(){
    local vendor=$___X_CMD_THEME_TERM_VENDOR
    x_=
    eval "x_=\$___X_CMD_THEME_NAME_${vendor}"
    x_="${x_:-$___X_CMD_THEME_NAME_default}"
    case "$x_" in
        */*)        ;;
        random)     x_="${___X_CMD_THEME_RANDOM_CURRENT_NAME} (random)" ;;
        "")         N=theme M="Not found current theme name" log:ret:1 ;;
        *)          x_="${x_}/1" ;;
    esac
}

___x_cmd_theme_current(){
    local x_
    ___x_cmd_theme_current_ || return
    printf "%s\n" "$x_"
}

